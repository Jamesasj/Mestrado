treinamento <- read.csv("/var/www/html/Marcador/Bases/treinamento.csv", sep=";")
View(treinamento)
media = mean(treinamento$total)
desvio = sd(treinamento$total)
treinamento <- read.csv("/var/www/html/Marcador/Bases/treinamento.csv", sep=";")
media = mean(treinamento$total)
desvio = sd(treinamento$total)
proba = pnorm(10, media, desvio)
proba = pnorm(10, media, desvio)
plot(dnorm,media, desvio,type="l")
plot(pnorm, media, desvio, type="l")
Tabela15.1 <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
View(Tabela15.1)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$X ~ dados$Y)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$X ~ dados$Y)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$X ~ dados$Y)
plot(dados$X ~ dados$Y)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
abline(rl.regressao)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
abline(rl.regressao)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
rl.sumarizado <- summary(rl.regressao)
abline(rl.regressao)
View(rl.sumarizado)
View(rl.regressao)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
rl.sumarizado <- summary(rl.regressao)
rl.coeficiente <- rl.regressao$coefficients
abline(rl.regressao)
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
rl.sumarizado <- summary(rl.regressao)
View(rl.regressao$coefficients)
abline(rl.regressao)
ls?
.
?lm
dados <- read.csv("~/Documents/Metodos-Empiricos-R/Tabela15.1.csv")
rl.regressao <- lm(dados$Y ~ dados$X)
plot(dados$Y ~ dados$X)
rl.sumarizado <- summary(rl.regressao)
View(rl.regressao$coefficients)
abline(rl.regressao)
X <- rzipf(100)
install.packages(zipf)
install.packages(zipfr)
install.packages("zipfR")
x <- rzipf(n = 500, s = 2, N = 100)
library(zipfR)
x <- rzipf(n = 500, s = 2, N = 100)
library(zipfR)
apwsj88.90.docno <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", quote="\"", comment.char="")
View(apwsj88.90.docno)
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep,"-" quote="\"", comment.char="")
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep,"-" ,quote="\"", comment.char="")
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep="-" ,quote="\"", comment.char="")
View(dados)
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep="-" ,quote="\"", comment.char="")
plot(dados$V1~dados$V2)
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep="-" ,quote="\"", comment.char="")
plot(dados$V2~dados$V1)
dados <- read.table("~/Documents/NoveltyData/apwsj88-90.docno.sorted", sep="-" ,quote="\"", comment.char="")
plot(dados$V2)
plot(sort(dados$V2, decreasing = TRUE))
plot(sort(dados$V2, decreasing = TRUE), type = "b", ylab = "Frequencia de palavras", xlab = "Documentos")
install.packages(“XML”)
install.packages("XML")
library(XML)
diretorio <- "/home/james/Documents/NoveltyData/Topics"
dados <- xmlTreeParse(diretorio)
View(dados)
library(XML)
diretorio <- "/home/james/Documents/NoveltyData/Topics"
dados <- xmlTreeParse(diretorio)
dados <- scan(diretorio,quote="\"", what = "char", sep = "<\\top>")
dados <- scan(diretorio,quote="\"", what = "char", sep = "<\top>" , encoding = "UTF-8")
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
install.packages('corrplot')
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
# correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at3.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at2.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at2.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
# correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
# correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
# correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
# correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
dados <- read.csv("/home/james/Documents/Avaliação por Pares /at1.csv", header=TRUE)
attach(dados)
names(dados)
#########################################################################
#Pearson's Correlation
#########################################################################
cor(dados)
correlacionado <- cor(dados)
#########################################################################
#Data visualisation
#########################################################################
library(corrplot)
corrplot.mixed(correlacionado, lower.col = "black", number.cex = .6)
corrplot(correlacionado)
View(correlacionado)
setwd(dir = "/home/james/Documents/data smart")
library(skmeans)
library(cluster)
library(dplyr)
install.packages('skmeans')
setwd(dir = "/home/james/Documents/data smart")
library(skmeans)
library(cluster)
library(dplyr)
kmcDF <- read.csv("dados_sem_trat.csv")
wineDF <- t(kmcDF[,-c(1,2,3,4,5,6,7)])
wineDF[is.na(wineDF)] <- 0
wineMatrix <-as.matrix(wineDF)
partition <- skmeans(wineMatrix, 5)
# Create a vector of customer names for each cluster
cluster_1 <- names(partition$cluster[partition$cluster == 1])
cluster_2 <- names(partition$cluster[partition$cluster == 2])
cluster_3 <- names(partition$cluster[partition$cluster == 3])
cluster_4 <- names(partition$cluster[partition$cluster == 4])
cluster_5 <- names(partition$cluster[partition$cluster == 5])
#Gráfico silhouette
silhouette_k5 <- silhouette(partition)
summary(silhouette_k5)
plot(silhouette_k5)
#silhouette para 4 centróides
partition_k4 <- skmeans(wineMatrix, 4)
silhouette_k4 <- silhouette(partition_k4)
plot(silhouette_k4)
summary(silhouette_k4)
View(kmcDF)
#silhouette para 4 centróides
partition_k4 <- skmeans(wineMatrix, 5)
silhouette_k4 <- silhouette(partition_k4)
plot(silhouette_k4)
summary(silhouette_k4)
View(wineDF)
View(partition_k4)
install.packages("fpc")
setwd(dir = "/home/james/Documents/data smart/")
library(skmeans)
library(cluster)
library(dplyr)
kmcDF <- read.csv("dados_sem_trat.csv") # lê como DataFrame
wineDF <- t(kmcDF[,-c(1,2,3,4,5,6,7)]) # nova variável DataFrame crica, remove colunas de 1-7, e faz a transposição do DataFrame
wineDF[is.na(wineDF)] <- 0 # substitui os valores NA por Zeros
wineMatrix <-as.matrix(wineDF) # converte de DataFrame para Matriz
partition <- skmeans(wineMatrix, 5) # Segment the customers into 5 clusters
partition # returns a summary statement for the process
partition$cluster # returns a vector showing cluster assignment for each customer
# Create a vector of customer names for each cluster
cluster_1 <- names(partition$cluster[partition$cluster == 1])
cluster_2 <- names(partition$cluster[partition$cluster == 2])
cluster_3 <- names(partition$cluster[partition$cluster == 3])
cluster_4 <- names(partition$cluster[partition$cluster == 4])
cluster_5 <- names(partition$cluster[partition$cluster == 5])
#Gráfico silhouette
silhouette_k5 <- silhouette(partition)
summary(silhouette_k5)
plot(silhouette_k5)
#Visualização da clusterização
library(cluster)
library(fpc)
#install.packages("fpc")
head(dadosT)
# Análise do Kmeans e agrupamentos
clus <- kmeans(dadosT, centers=4, iter.max = 500)
# plotagem
plotcluster(dadosT, clus$cluster)
setwd(dir = "/home/james/Documents/data smart/")
library(readr)
dados <- read_csv("dados_cap2_num.csv")
dados$Offer <- NULL #remove a coluna passada
dadosT <- t(dados) #realiza a transposição dos dados
k <-kmeans(dadosT, centers=4, iter.max = 500) #cria x clusters
table(k$cluster) #conta os pontos de dados alocados em cada cluster
setwd(dir = "/home/james/Documents/data smart/")
library(readr)
dados <- read_csv("dados_cap2_num.csv")
dados$Offer <- NULL #remove a coluna passada
dadosT <- t(dados) #realiza a transposição dos dados
k <-kmeans(dadosT, centers=4, iter.max = 500) #cria x clusters
table(k$cluster) #conta os pontos de dados alocados em cada cluster
dados <- read_csv("dados_cap2_num.csv")
dados <- read.csv("dados_cap2_num.csv")
dados$Offer <- NULL #remove a coluna passada
dadosT <- t(dados) #realiza a transposição dos dados
k <-kmeans(dadosT, centers=4, iter.max = 500) #cria x clusters
table(k$cluster) #conta os pontos de dados alocados em cada cluster
setwd(dir = "/home/james/Documents/data smart/")
#Visualização da clusterização
library(cluster)
library(fpc)
head(dadosT)
# Análise do Kmeans e agrupamentos
clus <- kmeans(dadosT, centers=4, iter.max = 500)
# plotagem
plotcluster(dadosT, clus$cluster)
clus <- kmeans(dadosT, centers=4, iter.max = 500)
# plotagem
plotcluster(dadosT, clus$cluster)
setwd(dir = "/home/james/Documents/data smart/")
library(skmeans)
library(cluster)
library(dplyr)
kmcDF <- read.csv("dados_sem_trat.csv") # lê como DataFrame
wineDF <- t(kmcDF[,-c(1,2,3,4,5,6,7)]) # nova variável DataFrame crica, remove colunas de 1-7, e faz a transposição do DataFrame
wineDF[is.na(wineDF)] <- 0 # substitui os valores NA por Zeros
wineMatrix <-as.matrix(wineDF) # converte de DataFrame para Matriz
partition <- skmeans(wineMatrix, 5) # com 5 clusters
#Gráfico silhouette
silhouette_k5 <- silhouette(partition)
plot(silhouette_k5)
#silhouette para 4 centróides
partition_k4 <- skmeans(wineMatrix, 4)
silhouette_k4 <- silhouette(partition_k4)
plot(silhouette_k4)
